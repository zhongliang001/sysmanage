<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.2.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.zl</groupId>
    <artifactId>sys-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>sys-parent</name>
    <description>sys-parent</description>
    <modules>
        <module>sys-admin</module>
        <module>sys-common</module>
        <module>sys-register</module>
        <module>sys-uua</module>
        <module>sys-common-base</module>
        <module>sys-sequence</module>
        <module>sys-gateway</module>
    </modules>
    <properties>
        <java.version>1.8</java.version>
        <spring-cloud.version>Hoxton.SR9</spring-cloud.version>
        <eureka.version>2.2.6.RELEASE</eureka.version>
        <swagger.version>1.7.1.RELEASE</swagger.version>
        <sys-common.version>0.0.1-SNAPSHOT</sys-common.version>
        <sys-admin-dto.version>0.0.1-SNAPSHOT</sys-admin-dto.version>
        <sys-admin-feign.version>0.0.1-SNAPSHOT</sys-admin-feign.version>
        <sys-sequence-feign.version>0.0.1-SNAPSHOT</sys-sequence-feign.version>
        <springfox-boot-starter.version>3.0.0</springfox-boot-starter.version>
        <mybatis-spring-boot-starter.version>2.1.4</mybatis-spring-boot-starter.version>
        <apollo.version>1.3.0</apollo.version>
        <sys-sequence-dto.version>0.0.1-SNAPSHOT</sys-sequence-dto.version>
        <java-jwt.version>3.10.0</java-jwt.version>
        <spring-security.version>5.3.3.RELEASE</spring-security.version>
        <pagehelper.starter.version>1.2.5</pagehelper.starter.version>
        <skipTests>true</skipTests>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.spring4all</groupId>
                <artifactId>swagger-spring-boot-starter</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zl</groupId>
                <artifactId>sys-common</artifactId>
                <version>${sys-common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zl</groupId>
                <artifactId>sys-common-base</artifactId>
                <version>${sys-common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zl</groupId>
                <artifactId>sys-admin-dto</artifactId>
                <version>${sys-admin-dto.version}</version>
            </dependency>
            <dependency>
                <artifactId>sys-sequence-dto</artifactId>
                <groupId>com.zl</groupId>
                <version>${sys-sequence-dto.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zl</groupId>
                <artifactId>sys-admin-feign</artifactId>
                <version>${sys-admin-feign.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${springfox-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ctrip.framework.apollo</groupId>
                <artifactId>apollo-client</artifactId>
                <version>${apollo.version}</version>
            </dependency>
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zl</groupId>
                <artifactId>sys-sequence-feign</artifactId>
                <version>${sys-sequence-feign.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>${spring-security.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.starter.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.mybatis.spring.boot</groupId>
                        <artifactId>mybatis-spring-boot-starter</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!--使用docker-maven-plugin插件-->
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>1.0.0</version>
                    <!--将插件绑定在某个phase执行-->
                    <executions>
                        <execution>
                            <id>build-image</id>
                            <!--用户只需执行mvn package ，就会自动执行mvn docker:build-->
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>

                    <configuration>
                        <!--指定生成的镜像名,这里是我们的作者名+项目名-->
                        <imageName>${project.build.finalName}</imageName>

                        <!--指定标签 这里指定的是镜像的版本，我们默认版本是latest-->
                        <imageTags>
                            <imageTag>latest</imageTag>
                        </imageTags>

                        <!--指定基础镜像jdk1.8-->
                        <baseImage>java</baseImage>
                        <!--镜像制作人本人信息-->
                        <maintainer>zhongliang@126.com</maintainer>
                        <!--切换到ROOT目录-->
                        <workdir>/usr/local/</workdir>
                        <volumes>
                            <volume>

                            </volume>
                        </volumes>
                        <!--查看我们的java版本-->
                        <cmd>["java", "-version"]</cmd>

                        <!--${project.build.finalName}.jar是打包后生成的jar包的名字-->
                        <entryPoint>["java", "-jar", "-Dapollo.configService=http://47.105.171.96:8080","/${project.build.finalName}.jar"]</entryPoint>

                        <!--指定远程 docker api地址-->
                        <dockerHost>http://192.168.59.129:2375</dockerHost>

                        <!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <!--jar 包所在的路径  此处配置的 即对应 target 目录-->
                                <directory>${project.build.directory}</directory>
                                <!--用于指定需要复制的文件 需要包含的 jar包 ，这里对应的是 Dockerfile中添加的文件名　-->
                                <include>${project.build.finalName}.jar</include>
                            </resource>


                        </resources>

                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.0.1.RELEASE</version>
            </plugin>
        </plugins>
    </build>

</project>
